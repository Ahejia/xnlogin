<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.xnlogin.mapper.XnloginMapper" >
  <resultMap id="BaseResultMap" type="com.example.xnlogin.mess.Xnlogin" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="email_address" property="emailAddress" jdbcType="VARCHAR" />
    <result column="identity" property="identity" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, email_address, `identity`, user_name, password, unit, create_time, update_time
  </sql>
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xnlogin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from xnlogin
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.example.xnlogin.mess.Xnlogin" >
    insert into xnlogin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="emailAddress != null" >
        email_address,
      </if>
      <if test="identity != null" >
        `identity`,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="unit != null" >
        unit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="emailAddress != null" >
        #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        #{identity,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.example.xnlogin.mess.Xnlogin" >
    update xnlogin
    <set >
      <if test="emailAddress != null" >
        email_address = #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        `identity` = #{identity,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--用户名查询-->
  <select id="getByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from xnlogin
    where user_name = #{userName}
  </select>

  <!--邮箱查询-->
  <select id="getByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from xnlogin
    where email_address = #{emailAddress}
  </select>
</mapper>